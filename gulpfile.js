'use strict';
// Gulp and webpack imports for the pipeline
const gulp = require('gulp'),
    webpack = require('webpack'),
    webpackConfig = require('./webpack.config.js'),
    browserSync = require('browser-sync').create();

// Arrow function to run webpack from Gulp
const assets = () => {
    return new Promise((resolve, reject) => {
        webpack(webpackConfig, (error, status) => {
            if (error) {
                return reject(error);
            }

            if (status.hasErrors()) {
                return reject(new Error(status.compilation.errors.join('\n')));
            }

            resolve();
        });
    });
};

// Arrow function to rise a 'server'
const serve = () => {
    browserSync.init({
        server: "./build",
        port: 8080,
        host: "0.0.0.0"
    });
};

// Arrow function to enable HMR when the watch function detects a change
const reload = () => {
    browserSync.reload();
};

// Arrow function that controls and detects the changes on the files in order to have HMR on development mode
const watch = () => {
    return gulp.watch(
        '**/*', // watch everything...
        {
            ignored: [
                // ...except for things generated by the build process.
                'dist/**/*'
            ]
        },
        // when something changes, rebuild + reload
        gulp.series(assets, reload)
    );
};

// Export a build task that runs the above two tasks in series (PROD MODE)
exports.build = gulp.series(assets, serve);

// Export a build task that runs the above three tasks in series (DEVELOPMENT MODE)
exports.developemnet = gulp.series(assets, serve, watch);